{
  "$schema": "http://json-schema.org/schema#",
  "default": {
    "affinity": {
      "podAntiAffinity": {
        "preferredDuringSchedulingIgnoredDuringExecution": [
          {
            "podAffinityTerm": {
              "labelSelector": {
                "matchExpressions": [
                  {
                    "key": "app",
                    "operator": "In",
                    "values": [
                      "sample-app"
                    ]
                  }
                ]
              },
              "topologyKey": "kubernetes.io/hostname"
            },
            "weight": 100
          }
        ]
      }
    },
    "app": {
      "enabled": true,
      "name": "sample-app",
      "replicaCount": 3,
      "version": "1.16.0"
    },
    "autoscaling": {
      "enabled": false,
      "maxReplicas": 10,
      "minReplicas": 2,
      "targetCPUUtilizationPercentage": 80,
      "targetMemoryUtilizationPercentage": 80
    },
    "backup": {
      "enabled": false,
      "retention": 7,
      "schedule": "daily",
      "storage": {
        "bucket": "backups",
        "region": "us-east-1",
        "type": "s3"
      }
    },
    "configMaps": {
      "app-config": {
        "data": {
          "config.yaml": "server:\n  port: 8080\n  timeout: 60\nfeatures:\n  rateLimit: true\n  caching: true\n"
        }
      }
    },
    "cronJobs": {
      "backup": {
        "enabled": false,
        "failedJobsHistoryLimit": 1,
        "schedule": "0 2 * * *",
        "successfulJobsHistoryLimit": 3
      }
    },
    "database": {
      "connectionPool": {
        "connectionTimeout": 30,
        "maxConnections": 20,
        "minConnections": 5
      },
      "enabled": true,
      "existingSecret": "",
      "host": "postgres.default.svc.cluster.local",
      "name": "appdb",
      "port": 5432,
      "secretKey": "password",
      "type": "postgresql",
      "username": "appuser"
    },
    "externalServices": [
      {
        "name": "payment-gateway",
        "timeout": 30,
        "url": "https://api.payment-provider.com"
      },
      {
        "name": "notification-service",
        "timeout": 15,
        "url": "https://notifications.internal.com"
      }
    ],
    "extraEnvVars": [
      {
        "name": "LOG_LEVEL",
        "value": "info"
      },
      {
        "name": "ENVIRONMENT",
        "value": "production"
      }
    ],
    "extraVolumeMounts": [],
    "extraVolumes": [],
    "features": {
      "debugEndpoints": false,
      "experimentalAPI": false,
      "newUI": false
    },
    "global": {
      "debug": false,
      "environment": "production",
      "imagePullSecrets": [
        {
          "name": "docker-registry"
        }
      ]
    },
    "image": {
      "pullPolicy": "IfNotPresent",
      "repository": "nginx",
      "tag": ""
    },
    "ingress": {
      "annotations": {
        "cert-manager.io/cluster-issuer": "letsencrypt-prod",
        "nginx.ingress.kubernetes.io/rewrite-target": "/"
      },
      "className": "nginx",
      "enabled": false,
      "hosts": [
        {
          "host": "chart-example.local",
          "paths": [
            {
              "path": "/",
              "pathType": "Prefix"
            }
          ]
        }
      ],
      "tls": [
        {
          "hosts": [
            "chart-example.local"
          ],
          "secretName": "chart-example-tls"
        }
      ]
    },
    "jobs": {
      "migration": {
        "command": [
          "migrate",
          "-path",
          "/migrations",
          "-database",
          "postgres://...",
          "up"
        ],
        "enabled": false,
        "image": "migrate/migrate",
        "tag": "latest"
      }
    },
    "livenessProbe": {
      "httpGet": {
        "path": "/health",
        "port": 8080
      },
      "initialDelaySeconds": 30,
      "periodSeconds": 10
    },
    "logging": {
      "aggregation": {
        "enabled": false,
        "endpoint": "fluentd.logging.svc.cluster.local:24224",
        "type": "fluentd"
      },
      "enabled": true,
      "format": "json",
      "level": "info"
    },
    "monitoring": {
      "enabled": true,
      "metrics": {
        "enabled": true,
        "interval": "30s",
        "path": "/metrics",
        "port": 9090
      },
      "serviceMonitor": {
        "enabled": false,
        "labels": {},
        "namespace": ""
      }
    },
    "networkPolicy": {
      "enabled": false,
      "ingress": [
        {
          "from": [
            {
              "namespaceSelector": {
                "matchLabels": {
                  "name": "frontend"
                }
              }
            }
          ],
          "ports": [
            {
              "port": 8080,
              "protocol": "TCP"
            }
          ]
        }
      ]
    },
    "podAnnotations": {
      "prometheus.io/port": "9090",
      "prometheus.io/scrape": "true"
    },
    "podDisruptionBudget": {
      "enabled": false,
      "minAvailable": 1
    },
    "podSecurityContext": {
      "fsGroup": 2000,
      "runAsNonRoot": true,
      "runAsUser": 1000
    },
    "readinessProbe": {
      "httpGet": {
        "path": "/ready",
        "port": 8080
      },
      "initialDelaySeconds": 5,
      "periodSeconds": 5
    },
    "redis": {
      "db": 0,
      "enabled": false,
      "host": "redis.default.svc.cluster.local",
      "password": "",
      "port": 6379
    },
    "resources": {
      "limits": {
        "cpu": "200m",
        "memory": "256Mi"
      },
      "requests": {
        "cpu": "100m",
        "memory": "128Mi"
      }
    },
    "secrets": {
      "api-keys": {
        "stringData": {
          "datadog": "",
          "sendgrid": "",
          "stripe": ""
        }
      }
    },
    "securityContext": {
      "capabilities": {
        "drop": [
          "ALL"
        ]
      },
      "readOnlyRootFilesystem": true,
      "runAsNonRoot": true,
      "runAsUser": 1000
    },
    "service": {
      "annotations": {},
      "enabled": true,
      "port": 80,
      "targetPort": 8080,
      "type": "ClusterIP"
    },
    "serviceAccount": {
      "annotations": {},
      "enabled": true,
      "name": ""
    },
    "serviceMesh": {
      "enabled": false,
      "provider": "istio",
      "sidecar": {
        "inject": true,
        "resources": {
          "limits": {
            "cpu": "100m",
            "memory": "128Mi"
          }
        }
      }
    },
    "tenants": [
      {
        "name": "tenant1",
        "namespace": "tenant1-prod",
        "quota": {
          "cpu": "4",
          "memory": "8Gi"
        }
      },
      {
        "name": "tenant2",
        "namespace": "tenant2-prod",
        "quota": {
          "cpu": "2",
          "memory": "4Gi"
        }
      }
    ],
    "tolerations": []
  },
  "properties": {
    "affinity": {
      "default": {
        "podAntiAffinity": {
          "preferredDuringSchedulingIgnoredDuringExecution": [
            {
              "podAffinityTerm": {
                "labelSelector": {
                  "matchExpressions": [
                    {
                      "key": "app",
                      "operator": "In",
                      "values": [
                        "sample-app"
                      ]
                    }
                  ]
                },
                "topologyKey": "kubernetes.io/hostname"
              },
              "weight": 100
            }
          ]
        }
      },
      "properties": {
        "podAntiAffinity": {
          "default": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "app",
                        "operator": "In",
                        "values": [
                          "sample-app"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                },
                "weight": 100
              }
            ]
          },
          "properties": {
            "preferredDuringSchedulingIgnoredDuringExecution": {
              "default": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "sample-app"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 100
                }
              ],
              "items": {
                "default": {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "sample-app"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 100
                },
                "properties": {
                  "podAffinityTerm": {
                    "default": {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "app",
                            "operator": "In",
                            "values": [
                              "sample-app"
                            ]
                          }
                        ]
                      },
                      "topologyKey": "kubernetes.io/hostname"
                    },
                    "properties": {
                      "labelSelector": {
                        "default": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "sample-app"
                              ]
                            }
                          ]
                        },
                        "properties": {
                          "matchExpressions": {
                            "default": [
                              {
                                "key": "app",
                                "operator": "In",
                                "values": [
                                  "sample-app"
                                ]
                              }
                            ],
                            "items": {
                              "default": {
                                "key": "app",
                                "operator": "In",
                                "values": [
                                  "sample-app"
                                ]
                              },
                              "properties": {
                                "key": {
                                  "default": "app",
                                  "type": "string"
                                },
                                "operator": {
                                  "default": "In",
                                  "type": "string"
                                },
                                "values": {
                                  "default": [
                                    "sample-app"
                                  ],
                                  "items": {
                                    "default": "sample-app",
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "key",
                                "operator",
                                "values"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "matchExpressions"
                        ],
                        "type": "object"
                      },
                      "topologyKey": {
                        "default": "kubernetes.io/hostname",
                        "type": "string"
                      }
                    },
                    "required": [
                      "labelSelector",
                      "topologyKey"
                    ],
                    "type": "object"
                  },
                  "weight": {
                    "default": 100,
                    "type": "integer"
                  }
                },
                "required": [
                  "podAffinityTerm",
                  "weight"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "required": [
            "preferredDuringSchedulingIgnoredDuringExecution"
          ],
          "type": "object"
        }
      },
      "required": [
        "podAntiAffinity"
      ],
      "type": "object"
    },
    "app": {
      "default": {
        "enabled": true,
        "name": "sample-app",
        "replicaCount": 3,
        "version": "1.16.0"
      },
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "name": {
          "default": "sample-app",
          "type": "string"
        },
        "replicaCount": {
          "default": 3,
          "type": "integer"
        },
        "version": {
          "default": "1.16.0",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "name",
        "version",
        "replicaCount"
      ],
      "type": "object"
    },
    "autoscaling": {
      "default": {
        "enabled": false,
        "maxReplicas": 10,
        "minReplicas": 2,
        "targetCPUUtilizationPercentage": 80,
        "targetMemoryUtilizationPercentage": 80
      },
      "properties": {
        "enabled": {
          "default": false,
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 10,
          "type": "integer"
        },
        "minReplicas": {
          "default": 2,
          "type": "integer"
        },
        "targetCPUUtilizationPercentage": {
          "default": 80,
          "type": "integer"
        },
        "targetMemoryUtilizationPercentage": {
          "default": 80,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "backup": {
      "default": {
        "enabled": false,
        "retention": 7,
        "schedule": "daily",
        "storage": {
          "bucket": "backups",
          "region": "us-east-1",
          "type": "s3"
        }
      },
      "properties": {
        "enabled": {
          "default": false,
          "type": "boolean"
        },
        "retention": {
          "default": 7,
          "type": "integer"
        },
        "schedule": {
          "default": "daily",
          "type": "string"
        },
        "storage": {
          "default": {
            "bucket": "backups",
            "region": "us-east-1",
            "type": "s3"
          },
          "properties": {
            "bucket": {
              "default": "backups",
              "type": "string"
            },
            "region": {
              "default": "us-east-1",
              "type": "string"
            },
            "type": {
              "default": "s3",
              "type": "string"
            }
          },
          "required": [
            "type",
            "bucket",
            "region"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "configMaps": {
      "default": {
        "app-config": {
          "data": {
            "config.yaml": "server:\n  port: 8080\n  timeout: 60\nfeatures:\n  rateLimit: true\n  caching: true\n"
          }
        }
      },
      "properties": {
        "app-config": {
          "default": {
            "data": {
              "config.yaml": "server:\n  port: 8080\n  timeout: 60\nfeatures:\n  rateLimit: true\n  caching: true\n"
            }
          },
          "properties": {
            "data": {
              "default": {
                "config.yaml": "server:\n  port: 8080\n  timeout: 60\nfeatures:\n  rateLimit: true\n  caching: true\n"
              },
              "properties": {
                "config.yaml": {
                  "default": "server:\n  port: 8080\n  timeout: 60\nfeatures:\n  rateLimit: true\n  caching: true\n",
                  "type": "string"
                }
              },
              "required": [
                "config.yaml"
              ],
              "type": "object"
            }
          },
          "required": [
            "data"
          ],
          "type": "object"
        }
      },
      "required": [
        "app-config"
      ],
      "type": "object"
    },
    "cronJobs": {
      "default": {
        "backup": {
          "enabled": false,
          "failedJobsHistoryLimit": 1,
          "schedule": "0 2 * * *",
          "successfulJobsHistoryLimit": 3
        }
      },
      "properties": {
        "backup": {
          "default": {
            "enabled": false,
            "failedJobsHistoryLimit": 1,
            "schedule": "0 2 * * *",
            "successfulJobsHistoryLimit": 3
          },
          "properties": {
            "enabled": {
              "default": false,
              "type": "boolean"
            },
            "failedJobsHistoryLimit": {
              "default": 1,
              "type": "integer"
            },
            "schedule": {
              "default": "0 2 * * *",
              "type": "string"
            },
            "successfulJobsHistoryLimit": {
              "default": 3,
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "database": {
      "default": {
        "connectionPool": {
          "connectionTimeout": 30,
          "maxConnections": 20,
          "minConnections": 5
        },
        "enabled": true,
        "existingSecret": "",
        "host": "postgres.default.svc.cluster.local",
        "name": "appdb",
        "port": 5432,
        "secretKey": "password",
        "type": "postgresql",
        "username": "appuser"
      },
      "properties": {
        "connectionPool": {
          "default": {
            "connectionTimeout": 30,
            "maxConnections": 20,
            "minConnections": 5
          },
          "properties": {
            "connectionTimeout": {
              "default": 30,
              "type": "integer"
            },
            "maxConnections": {
              "default": 20,
              "type": "integer"
            },
            "minConnections": {
              "default": 5,
              "type": "integer"
            }
          },
          "required": [
            "maxConnections",
            "minConnections",
            "connectionTimeout"
          ],
          "type": "object"
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "existingSecret": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        },
        "host": {
          "default": "postgres.default.svc.cluster.local",
          "type": "string"
        },
        "name": {
          "default": "appdb",
          "type": "string"
        },
        "port": {
          "default": 5432,
          "type": "integer"
        },
        "secretKey": {
          "default": "password",
          "type": "string"
        },
        "type": {
          "default": "postgresql",
          "type": "string"
        },
        "username": {
          "default": "appuser",
          "type": "string"
        }
      },
      "required": [
        "port",
        "connectionPool",
        "type",
        "username",
        "host",
        "name",
        "secretKey",
        "enabled"
      ],
      "type": "object"
    },
    "externalServices": {
      "default": [
        {
          "name": "payment-gateway",
          "timeout": 30,
          "url": "https://api.payment-provider.com"
        },
        {
          "name": "notification-service",
          "timeout": 15,
          "url": "https://notifications.internal.com"
        }
      ],
      "items": {
        "default": {
          "name": "payment-gateway",
          "timeout": 30,
          "url": "https://api.payment-provider.com"
        },
        "properties": {
          "name": {
            "default": "payment-gateway",
            "type": "string"
          },
          "timeout": {
            "default": 30,
            "type": "integer"
          },
          "url": {
            "default": "https://api.payment-provider.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "url",
          "timeout"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "extraEnvVars": {
      "default": [
        {
          "name": "LOG_LEVEL",
          "value": "info"
        },
        {
          "name": "ENVIRONMENT",
          "value": "production"
        }
      ],
      "items": {
        "default": {
          "name": "LOG_LEVEL",
          "value": "info"
        },
        "properties": {
          "name": {
            "default": "LOG_LEVEL",
            "type": "string"
          },
          "value": {
            "default": "info",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "extraVolumeMounts": {
      "default": [],
      "items": {},
      "type": "array"
    },
    "extraVolumes": {
      "default": [],
      "items": {},
      "type": "array"
    },
    "features": {
      "default": {
        "debugEndpoints": false,
        "experimentalAPI": false,
        "newUI": false
      },
      "properties": {
        "debugEndpoints": {
          "default": false,
          "type": "boolean"
        },
        "experimentalAPI": {
          "default": false,
          "type": "boolean"
        },
        "newUI": {
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "experimentalAPI",
        "debugEndpoints",
        "newUI"
      ],
      "type": "object"
    },
    "global": {
      "default": {
        "debug": false,
        "environment": "production",
        "imagePullSecrets": [
          {
            "name": "docker-registry"
          }
        ]
      },
      "properties": {
        "debug": {
          "default": false,
          "type": "boolean"
        },
        "environment": {
          "default": "production",
          "type": "string"
        },
        "imagePullSecrets": {
          "default": [
            {
              "name": "docker-registry"
            }
          ],
          "items": {
            "default": {
              "name": "docker-registry"
            },
            "properties": {
              "name": {
                "default": "docker-registry",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "debug",
        "imagePullSecrets",
        "environment"
      ],
      "type": "object"
    },
    "image": {
      "default": {
        "pullPolicy": "IfNotPresent",
        "repository": "nginx",
        "tag": ""
      },
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "type": "string"
        },
        "repository": {
          "default": "nginx",
          "type": "string"
        },
        "tag": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "repository",
        "pullPolicy"
      ],
      "type": "object"
    },
    "ingress": {
      "default": {
        "annotations": {
          "cert-manager.io/cluster-issuer": "letsencrypt-prod",
          "nginx.ingress.kubernetes.io/rewrite-target": "/"
        },
        "className": "nginx",
        "enabled": false,
        "hosts": [
          {
            "host": "chart-example.local",
            "paths": [
              {
                "path": "/",
                "pathType": "Prefix"
              }
            ]
          }
        ],
        "tls": [
          {
            "hosts": [
              "chart-example.local"
            ],
            "secretName": "chart-example-tls"
          }
        ]
      },
      "properties": {
        "annotations": {
          "default": {
            "cert-manager.io/cluster-issuer": "letsencrypt-prod",
            "nginx.ingress.kubernetes.io/rewrite-target": "/"
          },
          "properties": {
            "cert-manager.io/cluster-issuer": {
              "default": "letsencrypt-prod",
              "type": "string"
            },
            "nginx.ingress.kubernetes.io/rewrite-target": {
              "default": "/",
              "type": "string"
            }
          },
          "required": [
            "cert-manager.io/cluster-issuer",
            "nginx.ingress.kubernetes.io/rewrite-target"
          ],
          "type": "object"
        },
        "className": {
          "default": "nginx",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "type": "boolean"
        },
        "hosts": {
          "default": [
            {
              "host": "chart-example.local",
              "paths": [
                {
                  "path": "/",
                  "pathType": "Prefix"
                }
              ]
            }
          ],
          "items": {
            "default": {
              "host": "chart-example.local",
              "paths": [
                {
                  "path": "/",
                  "pathType": "Prefix"
                }
              ]
            },
            "properties": {
              "host": {
                "default": "chart-example.local",
                "type": "string"
              },
              "paths": {
                "default": [
                  {
                    "path": "/",
                    "pathType": "Prefix"
                  }
                ],
                "items": {
                  "default": {
                    "path": "/",
                    "pathType": "Prefix"
                  },
                  "properties": {
                    "path": {
                      "default": "/",
                      "type": "string"
                    },
                    "pathType": {
                      "default": "Prefix",
                      "type": "string"
                    }
                  },
                  "required": [
                    "path",
                    "pathType"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "host",
              "paths"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "tls": {
          "default": [
            {
              "hosts": [
                "chart-example.local"
              ],
              "secretName": "chart-example-tls"
            }
          ],
          "items": {
            "default": {
              "hosts": [
                "chart-example.local"
              ],
              "secretName": "chart-example-tls"
            },
            "properties": {
              "hosts": {
                "default": [
                  "chart-example.local"
                ],
                "items": {
                  "default": "chart-example.local",
                  "type": "string"
                },
                "type": "array"
              },
              "secretName": {
                "default": "chart-example-tls",
                "type": "string"
              }
            },
            "required": [
              "secretName",
              "hosts"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "jobs": {
      "default": {
        "migration": {
          "command": [
            "migrate",
            "-path",
            "/migrations",
            "-database",
            "postgres://...",
            "up"
          ],
          "enabled": false,
          "image": "migrate/migrate",
          "tag": "latest"
        }
      },
      "properties": {
        "migration": {
          "default": {
            "command": [
              "migrate",
              "-path",
              "/migrations",
              "-database",
              "postgres://...",
              "up"
            ],
            "enabled": false,
            "image": "migrate/migrate",
            "tag": "latest"
          },
          "properties": {
            "command": {
              "default": [
                "migrate",
                "-path",
                "/migrations",
                "-database",
                "postgres://...",
                "up"
              ],
              "items": {
                "default": "migrate",
                "type": "string"
              },
              "type": "array"
            },
            "enabled": {
              "default": false,
              "type": "boolean"
            },
            "image": {
              "default": "migrate/migrate",
              "type": "string"
            },
            "tag": {
              "default": "latest",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "livenessProbe": {
      "default": {
        "httpGet": {
          "path": "/health",
          "port": 8080
        },
        "initialDelaySeconds": 30,
        "periodSeconds": 10
      },
      "properties": {
        "httpGet": {
          "default": {
            "path": "/health",
            "port": 8080
          },
          "properties": {
            "path": {
              "default": "/health",
              "type": "string"
            },
            "port": {
              "default": 8080,
              "type": "integer"
            }
          },
          "required": [
            "port",
            "path"
          ],
          "type": "object"
        },
        "initialDelaySeconds": {
          "default": 30,
          "type": "integer"
        },
        "periodSeconds": {
          "default": 10,
          "type": "integer"
        }
      },
      "required": [
        "httpGet",
        "initialDelaySeconds",
        "periodSeconds"
      ],
      "type": "object"
    },
    "logging": {
      "default": {
        "aggregation": {
          "enabled": false,
          "endpoint": "fluentd.logging.svc.cluster.local:24224",
          "type": "fluentd"
        },
        "enabled": true,
        "format": "json",
        "level": "info"
      },
      "properties": {
        "aggregation": {
          "default": {
            "enabled": false,
            "endpoint": "fluentd.logging.svc.cluster.local:24224",
            "type": "fluentd"
          },
          "properties": {
            "enabled": {
              "default": false,
              "type": "boolean"
            },
            "endpoint": {
              "default": "fluentd.logging.svc.cluster.local:24224",
              "type": "string"
            },
            "type": {
              "default": "fluentd",
              "type": "string"
            }
          },
          "type": "object"
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "format": {
          "default": "json",
          "type": "string"
        },
        "level": {
          "default": "info",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "level",
        "format"
      ],
      "type": "object"
    },
    "monitoring": {
      "default": {
        "enabled": true,
        "metrics": {
          "enabled": true,
          "interval": "30s",
          "path": "/metrics",
          "port": 9090
        },
        "serviceMonitor": {
          "enabled": false,
          "labels": {},
          "namespace": ""
        }
      },
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "metrics": {
          "default": {
            "enabled": true,
            "interval": "30s",
            "path": "/metrics",
            "port": 9090
          },
          "properties": {
            "enabled": {
              "default": true,
              "type": "boolean"
            },
            "interval": {
              "default": "30s",
              "type": "string"
            },
            "path": {
              "default": "/metrics",
              "type": "string"
            },
            "port": {
              "default": 9090,
              "type": "integer"
            }
          },
          "required": [
            "port",
            "interval",
            "enabled",
            "path"
          ],
          "type": "object"
        },
        "serviceMonitor": {
          "default": {
            "enabled": false,
            "namespace": ""
          },
          "properties": {
            "enabled": {
              "default": false,
              "type": "boolean"
            },
            "labels": {
              "default": {},
              "properties": {},
              "type": "object"
            },
            "namespace": {
              "default": null,
              "type": [
                "string",
                "null"
              ]
            }
          },
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "metrics"
      ],
      "type": "object"
    },
    "networkPolicy": {
      "default": {
        "enabled": false,
        "ingress": [
          {
            "from": [
              {
                "namespaceSelector": {
                  "matchLabels": {
                    "name": "frontend"
                  }
                }
              }
            ],
            "ports": [
              {
                "port": 8080,
                "protocol": "TCP"
              }
            ]
          }
        ]
      },
      "properties": {
        "enabled": {
          "default": false,
          "type": "boolean"
        },
        "ingress": {
          "default": [
            {
              "from": [
                {
                  "namespaceSelector": {
                    "matchLabels": {
                      "name": "frontend"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "port": 8080,
                  "protocol": "TCP"
                }
              ]
            }
          ],
          "items": {
            "default": {
              "from": [
                {
                  "namespaceSelector": {
                    "matchLabels": {
                      "name": "frontend"
                    }
                  }
                }
              ],
              "ports": [
                {
                  "port": 8080,
                  "protocol": "TCP"
                }
              ]
            },
            "properties": {
              "from": {
                "default": [
                  {
                    "namespaceSelector": {
                      "matchLabels": {
                        "name": "frontend"
                      }
                    }
                  }
                ],
                "items": {
                  "default": {
                    "namespaceSelector": {
                      "matchLabels": {
                        "name": "frontend"
                      }
                    }
                  },
                  "properties": {
                    "namespaceSelector": {
                      "default": {
                        "matchLabels": {
                          "name": "frontend"
                        }
                      },
                      "properties": {
                        "matchLabels": {
                          "default": {
                            "name": "frontend"
                          },
                          "properties": {
                            "name": {
                              "default": "frontend",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "matchLabels"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "namespaceSelector"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "ports": {
                "default": [
                  {
                    "port": 8080,
                    "protocol": "TCP"
                  }
                ],
                "items": {
                  "default": {
                    "port": 8080,
                    "protocol": "TCP"
                  },
                  "properties": {
                    "port": {
                      "default": 8080,
                      "type": "integer"
                    },
                    "protocol": {
                      "default": "TCP",
                      "type": "string"
                    }
                  },
                  "required": [
                    "protocol",
                    "port"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "from",
              "ports"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "nodeSelector": {
      "default": {},
      "properties": {},
      "type": "object"
    },
    "podAnnotations": {
      "default": {
        "prometheus.io/port": "9090",
        "prometheus.io/scrape": "true"
      },
      "properties": {
        "prometheus.io/port": {
          "default": "9090",
          "type": "string"
        },
        "prometheus.io/scrape": {
          "default": "true",
          "type": "string"
        }
      },
      "required": [
        "prometheus.io/scrape",
        "prometheus.io/port"
      ],
      "type": "object"
    },
    "podDisruptionBudget": {
      "default": {
        "enabled": false,
        "minAvailable": 1
      },
      "properties": {
        "enabled": {
          "default": false,
          "type": "boolean"
        },
        "maxUnavailable": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        },
        "minAvailable": {
          "default": 1,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "podSecurityContext": {
      "default": {
        "fsGroup": 2000,
        "runAsNonRoot": true,
        "runAsUser": 1000
      },
      "properties": {
        "fsGroup": {
          "default": 2000,
          "type": "integer"
        },
        "runAsNonRoot": {
          "default": true,
          "type": "boolean"
        },
        "runAsUser": {
          "default": 1000,
          "type": "integer"
        }
      },
      "required": [
        "runAsNonRoot",
        "runAsUser",
        "fsGroup"
      ],
      "type": "object"
    },
    "readinessProbe": {
      "default": {
        "httpGet": {
          "path": "/ready",
          "port": 8080
        },
        "initialDelaySeconds": 5,
        "periodSeconds": 5
      },
      "properties": {
        "httpGet": {
          "default": {
            "path": "/ready",
            "port": 8080
          },
          "properties": {
            "path": {
              "default": "/ready",
              "type": "string"
            },
            "port": {
              "default": 8080,
              "type": "integer"
            }
          },
          "required": [
            "path",
            "port"
          ],
          "type": "object"
        },
        "initialDelaySeconds": {
          "default": 5,
          "type": "integer"
        },
        "periodSeconds": {
          "default": 5,
          "type": "integer"
        }
      },
      "required": [
        "initialDelaySeconds",
        "periodSeconds",
        "httpGet"
      ],
      "type": "object"
    },
    "redis": {
      "default": {
        "db": 0,
        "enabled": false,
        "host": "redis.default.svc.cluster.local",
        "password": "",
        "port": 6379
      },
      "properties": {
        "db": {
          "default": 0,
          "type": "integer"
        },
        "enabled": {
          "default": false,
          "type": "boolean"
        },
        "host": {
          "default": "redis.default.svc.cluster.local",
          "type": "string"
        },
        "password": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        },
        "port": {
          "default": 6379,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "resources": {
      "default": {
        "limits": {
          "cpu": "200m",
          "memory": "256Mi"
        },
        "requests": {
          "cpu": "100m",
          "memory": "128Mi"
        }
      },
      "properties": {
        "limits": {
          "default": {
            "cpu": "200m",
            "memory": "256Mi"
          },
          "properties": {
            "cpu": {
              "default": "200m",
              "type": "string"
            },
            "memory": {
              "default": "256Mi",
              "type": "string"
            }
          },
          "required": [
            "cpu",
            "memory"
          ],
          "type": "object"
        },
        "requests": {
          "default": {
            "cpu": "100m",
            "memory": "128Mi"
          },
          "properties": {
            "cpu": {
              "default": "100m",
              "type": "string"
            },
            "memory": {
              "default": "128Mi",
              "type": "string"
            }
          },
          "required": [
            "cpu",
            "memory"
          ],
          "type": "object"
        }
      },
      "required": [
        "limits",
        "requests"
      ],
      "type": "object"
    },
    "secrets": {
      "default": {
        "api-keys": {
          "stringData": {
            "datadog": "",
            "sendgrid": "",
            "stripe": ""
          }
        }
      },
      "properties": {
        "api-keys": {
          "default": {
            "stringData": {
              "datadog": "",
              "sendgrid": "",
              "stripe": ""
            }
          },
          "properties": {
            "stringData": {
              "default": {
                "datadog": "",
                "sendgrid": "",
                "stripe": ""
              },
              "properties": {
                "datadog": {
                  "default": null,
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sendgrid": {
                  "default": null,
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "stripe": {
                  "default": null,
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "type": "object"
            }
          },
          "required": [
            "stringData"
          ],
          "type": "object"
        }
      },
      "required": [
        "api-keys"
      ],
      "type": "object"
    },
    "securityContext": {
      "default": {
        "capabilities": {
          "drop": [
            "ALL"
          ]
        },
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": true,
        "runAsUser": 1000
      },
      "properties": {
        "capabilities": {
          "default": {
            "drop": [
              "ALL"
            ]
          },
          "properties": {
            "drop": {
              "default": [
                "ALL"
              ],
              "items": {
                "default": "ALL",
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "drop"
          ],
          "type": "object"
        },
        "readOnlyRootFilesystem": {
          "default": true,
          "type": "boolean"
        },
        "runAsNonRoot": {
          "default": true,
          "type": "boolean"
        },
        "runAsUser": {
          "default": 1000,
          "type": "integer"
        }
      },
      "required": [
        "runAsNonRoot",
        "runAsUser",
        "capabilities",
        "readOnlyRootFilesystem"
      ],
      "type": "object"
    },
    "service": {
      "default": {
        "enabled": true,
        "port": 80,
        "targetPort": 8080,
        "type": "ClusterIP"
      },
      "properties": {
        "annotations": {
          "default": {},
          "properties": {},
          "type": "object"
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "port": {
          "default": 80,
          "type": "integer"
        },
        "targetPort": {
          "default": 8080,
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "type": "string"
        }
      },
      "required": [
        "type",
        "port",
        "targetPort",
        "enabled"
      ],
      "type": "object"
    },
    "serviceAccount": {
      "default": {
        "enabled": true,
        "name": ""
      },
      "properties": {
        "annotations": {
          "default": {},
          "properties": {},
          "type": "object"
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "name": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "serviceMesh": {
      "default": {
        "enabled": false,
        "provider": "istio",
        "sidecar": {
          "inject": true,
          "resources": {
            "limits": {
              "cpu": "100m",
              "memory": "128Mi"
            }
          }
        }
      },
      "properties": {
        "enabled": {
          "default": false,
          "type": "boolean"
        },
        "provider": {
          "default": "istio",
          "type": "string"
        },
        "sidecar": {
          "default": {
            "inject": true,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            }
          },
          "properties": {
            "inject": {
              "default": true,
              "type": "boolean"
            },
            "resources": {
              "default": {
                "limits": {
                  "cpu": "100m",
                  "memory": "128Mi"
                }
              },
              "properties": {
                "limits": {
                  "default": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  },
                  "properties": {
                    "cpu": {
                      "default": "100m",
                      "type": "string"
                    },
                    "memory": {
                      "default": "128Mi",
                      "type": "string"
                    }
                  },
                  "required": [
                    "cpu",
                    "memory"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "limits"
              ],
              "type": "object"
            }
          },
          "required": [
            "inject",
            "resources"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "tenants": {
      "default": [
        {
          "name": "tenant1",
          "namespace": "tenant1-prod",
          "quota": {
            "cpu": "4",
            "memory": "8Gi"
          }
        },
        {
          "name": "tenant2",
          "namespace": "tenant2-prod",
          "quota": {
            "cpu": "2",
            "memory": "4Gi"
          }
        }
      ],
      "items": {
        "default": {
          "name": "tenant1",
          "namespace": "tenant1-prod",
          "quota": {
            "cpu": "4",
            "memory": "8Gi"
          }
        },
        "properties": {
          "name": {
            "default": "tenant1",
            "type": "string"
          },
          "namespace": {
            "default": "tenant1-prod",
            "type": "string"
          },
          "quota": {
            "default": {
              "cpu": "4",
              "memory": "8Gi"
            },
            "properties": {
              "cpu": {
                "default": "4",
                "type": "string"
              },
              "memory": {
                "default": "8Gi",
                "type": "string"
              }
            },
            "required": [
              "cpu",
              "memory"
            ],
            "type": "object"
          }
        },
        "required": [
          "namespace",
          "quota",
          "name"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "tolerations": {
      "default": [],
      "items": {},
      "type": "array"
    }
  },
  "required": [
    "livenessProbe",
    "tenants",
    "serviceAccount",
    "extraEnvVars",
    "global",
    "secrets",
    "features",
    "logging",
    "monitoring",
    "cronJobs",
    "image",
    "affinity",
    "podSecurityContext",
    "jobs",
    "readinessProbe",
    "app",
    "securityContext",
    "database",
    "externalServices",
    "podAnnotations",
    "service",
    "configMaps",
    "resources"
  ],
  "type": "object"
}